
    create table Admin (
        id bigint generated by default as identity,
        user_id bigint not null,
        primary key (id)
    );

    create table app_user (
        id bigint generated by default as identity,
        email varchar(255) not null unique,
        name varchar(255) not null,
        password varchar(255) not null,
        surname varchar(255) not null,
        primary key (id)
    );

    create table ConcreteVendingMachine (
        capacity integer not null,
        createdAt timestamp(6) with time zone not null,
        lastMaintenance timestamp(6) with time zone not null,
        location varchar(255) not null,
        serialNumber varchar(255) not null,
        status varchar(255) not null check (status in ('Operative','OutOfService','Connected')),
        vending_machine_model varchar(255),
        primary key (serialNumber)
    );

    create table Connection (
        customer_id bigint not null,
        id bigint generated by default as identity,
        start timestamp(6) with time zone not null,
        machine_id varchar(255) not null,
        primary key (id)
    );

    create table Customer (
        balance float(53) not null,
        id bigint generated by default as identity,
        user_id bigint not null,
        primary key (id)
    );

    create table Inventory (
        occupiedSpace integer not null,
        id bigint generated by default as identity,
        machine_id varchar(255),
        primary key (id)
    );

    create table Item (
        position integer not null,
        price float(53) not null,
        quantity integer not null,
        volume integer not null,
        createdAt timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        inventory_id bigint not null,
        description varchar(255) not null,
        name varchar(255) not null,
        type varchar(255) not null check (type in ('Snack','Bottle','ExpressBeverage')),
        primary key (id)
    );

    create table MaintenanceReport (
        id bigint generated by default as identity,
        issueDate timestamp(6) with time zone not null,
        issueDescription varchar(255) not null,
        machine_id varchar(255),
        primary key (id)
    );

    create table Task (
        assignedAt timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        report_id bigint not null,
        supervisor_id bigint,
        worker_id bigint,
        status varchar(255) not null check (status in ('Reported','Assigned','Completed','InProgress','Deleted')),
        primary key (id)
    );

    create table Transaction (
        initialBalance float(53) not null,
        updatedBalance float(53) not null,
        customer_id bigint,
        date timestamp(6) with time zone not null,
        id bigint generated by default as identity,
        paymentMethod varchar(255) not null check (paymentMethod in ('Card','Cash','Wallet')),
        primary key (id)
    );

    create table TransactionItem (
        amount integer not null,
        id bigint generated by default as identity,
        item_id bigint,
        transaction_id bigint,
        machine_id varchar(255),
        primary key (id)
    );

    create table VendingMachine (
        modelNumber varchar(255) not null,
        type varchar(255) not null check (type in ('Coffe','Snack','PizzoneFarcito')),
        primary key (modelNumber)
    );

    create table Worker (
        isActive boolean not null,
        id bigint generated by default as identity,
        user_id bigint not null,
        primary key (id)
    );

    alter table if exists Admin 
       add constraint FK13g34xh1kbtwtu93v7a4u0m25 
       foreign key (user_id) 
       references app_user;

    alter table if exists ConcreteVendingMachine 
       add constraint FKh8orsc07tnro7r35sxme196n8 
       foreign key (vending_machine_model) 
       references VendingMachine;

    alter table if exists Customer 
       add constraint FKksdjlior8xvgvskvb1d3qomuv 
       foreign key (user_id) 
       references app_user;

    alter table if exists Inventory 
       add constraint FKlv0h7v1uuiwl8v7s4wn401h1i 
       foreign key (machine_id) 
       references ConcreteVendingMachine;

    alter table if exists Item 
       add constraint FKo9snmc7jt9iuowf7h3egadwov 
       foreign key (inventory_id) 
       references Inventory;

    alter table if exists MaintenanceReport 
       add constraint FKjckfcg7uix2ce31x8mrhsq39k 
       foreign key (machine_id) 
       references ConcreteVendingMachine;

    alter table if exists Task 
       add constraint FKppsob1ngl7dh137tbl5j1qp5h 
       foreign key (report_id) 
       references MaintenanceReport;

    alter table if exists Task 
       add constraint FKlj79e9gi8y0xyg9lx8fjil726 
       foreign key (supervisor_id) 
       references Admin;

    alter table if exists Task 
       add constraint FK1imufq62jdmtd22nxovh4nxua 
       foreign key (worker_id) 
       references Worker;

    alter table if exists Transaction 
       add constraint FKc3nqxp1ym216vsyi7wmdybinr 
       foreign key (customer_id) 
       references Customer;

    alter table if exists TransactionItem 
       add constraint FKdws1hkwysgmlwj71mv1xsysnc 
       foreign key (item_id) 
       references Item;

    alter table if exists TransactionItem 
       add constraint FKloegib891vuwd9rhkvvff2i59 
       foreign key (machine_id) 
       references ConcreteVendingMachine;

    alter table if exists TransactionItem 
       add constraint FKafyl8m6dv49my8lovopmav1ud 
       foreign key (transaction_id) 
       references Transaction;

    alter table if exists Worker 
       add constraint FKcqro486q290g2pw0l2ac5820c 
       foreign key (user_id) 
       references app_user;

-- Insert data into app_user
INSERT INTO app_user (email, name, password, surname) VALUES
('john.doe@example.com', 'John', 'hashed_password_1', 'Doe'),
('jane.smith@example.com', 'Jane', 'hashed_password_2', 'Smith'),
('admin.user@example.com', 'Admin', 'hashed_password_3', 'User'),
('worker.one@example.com', 'Alice', 'hashed_password_4', 'Johnson'),
('worker.two@example.com', 'Bob', 'hashed_password_5', 'Williams'),
('customer.one@example.com', 'Charlie', 'hashed_password_6', 'Brown'),
('customer.two@example.com', 'Diana', 'hashed_password_7', 'Prince');

-- Insert data into Admin
INSERT INTO Admin (user_id) VALUES
((SELECT id FROM app_user WHERE email = 'admin.user@example.com'));

-- Insert data into Customer
INSERT INTO Customer (balance, user_id) VALUES
(100.50, (SELECT id FROM app_user WHERE email = 'customer.one@example.com')),
(50.25, (SELECT id FROM app_user WHERE email = 'customer.two@example.com')),
(25.00, (SELECT id FROM app_user WHERE email = 'john.doe@example.com'));

-- Insert data into Worker
INSERT INTO Worker (isActive, user_id) VALUES
(TRUE, (SELECT id FROM app_user WHERE email = 'worker.one@example.com')),
(TRUE, (SELECT id FROM app_user WHERE email = 'worker.two@example.com'));

-- Insert data into VendingMachine
INSERT INTO VendingMachine (modelNumber, type) VALUES
('VM-COFFEE-001', 'Coffe'),
('VM-SNACK-001', 'Snack'),
('VM-PIZZONE-001', 'PizzoneFarcito');

-- Insert data into ConcreteVendingMachine
INSERT INTO ConcreteVendingMachine (serialNumber, capacity, createdAt, lastMaintenance, location, status, vending_machine_model) VALUES
('SNACK-NYC-001', 150, '2023-01-15 10:00:00', '2024-05-20 09:30:00', 'New York, Times Square', 'Operative', 'VM-SNACK-001'),
('COFFEE-LA-001', 80, '2023-02-01 11:30:00', '2024-05-18 14:00:00', 'Los Angeles, Downtown', 'Connected', 'VM-COFFEE-001'),
('PIZZONE-CHI-001', 50, '2023-03-10 09:00:00', '2024-05-15 10:00:00', 'Chicago, O''Hare Airport', 'OutOfService', 'VM-PIZZONE-001'),
('SNACK-LON-002', 120, '2023-04-05 13:00:00', '2024-05-25 11:00:00', 'London, Piccadilly Circus', 'Operative', 'VM-SNACK-001');

-- Insert data into Inventory
INSERT INTO Inventory (occupiedSpace, machine_id) VALUES
(100, 'SNACK-NYC-001'),
(50, 'COFFEE-LA-001'),
(20, 'PIZZONE-CHI-001'),
(80, 'SNACK-LON-002');

-- Insert data into Item
INSERT INTO Item (position, price, quantity, volume, createdAt, inventory_id, description, name, type) VALUES
(1, 1.75, 20, 100, '2024-05-01 10:00:00', (SELECT id FROM Inventory WHERE machine_id = 'SNACK-NYC-001'), 'Crispy potato chips', 'Potato Chips', 'Snack'),
(2, 2.50, 15, 250, '2024-05-01 10:00:00', (SELECT id FROM Inventory WHERE machine_id = 'SNACK-NYC-001'), 'Sweet chocolate bar', 'Chocolate Bar', 'Snack'),
(1, 3.00, 30, 330, '2024-05-05 11:00:00', (SELECT id FROM Inventory WHERE machine_id = 'COFFEE-LA-001'), 'Refreshing bottled water', 'Bottled Water', 'Bottle'),
(1, 4.50, 10, 500, '2024-05-10 12:00:00', (SELECT id FROM Inventory WHERE machine_id = 'PIZZONE-CHI-001'), 'Hot pepperoni pizza', 'Pepperoni Pizza', 'ExpressBeverage'), -- Assuming PizzoneFarcito items are handled as ExpressBeverage for Item type
(3, 2.00, 25, 200, '2024-05-12 09:00:00', (SELECT id FROM Inventory WHERE machine_id = 'SNACK-LON-002'), 'Fizzy orange soda', 'Orange Soda', 'Bottle');

-- Insert data into MaintenanceReport
INSERT INTO MaintenanceReport (issueDate, issueDescription, machine_id) VALUES
('2024-05-22 10:00:00', 'Coin mechanism jammed', 'SNACK-NYC-001'),
('2024-05-20 15:30:00', 'Coffee dispenser not working', 'COFFEE-LA-001'),
('2024-05-16 08:00:00', 'Heating element faulty', 'PIZZONE-CHI-001');

-- Insert data into Task
INSERT INTO Task (assignedAt, report_id, supervisor_id, worker_id, status) VALUES
('2024-05-22 11:00:00', (SELECT id FROM MaintenanceReport WHERE issueDescription = 'Coin mechanism jammed'), (SELECT id FROM Admin LIMIT 1), (SELECT id FROM Worker WHERE user_id = (SELECT id FROM app_user WHERE email = 'worker.one@example.com')), 'Assigned'),
('2024-05-20 16:00:00', (SELECT id FROM MaintenanceReport WHERE issueDescription = 'Coffee dispenser not working'), (SELECT id FROM Admin LIMIT 1), (SELECT id FROM Worker WHERE user_id = (SELECT id FROM app_user WHERE email = 'worker.two@example.com')), 'InProgress'),
('2024-05-16 09:00:00', (SELECT id FROM MaintenanceReport WHERE issueDescription = 'Heating element faulty'), (SELECT id FROM Admin LIMIT 1), (SELECT id FROM Worker WHERE user_id = (SELECT id FROM app_user WHERE email = 'worker.one@example.com')), 'Reported');

-- Insert data into Transaction
INSERT INTO Transaction (initialBalance, updatedBalance, customer_id, date, paymentMethod) VALUES
(100.50, 98.75, (SELECT id FROM Customer WHERE user_id = (SELECT id FROM app_user WHERE email = 'customer.one@example.com')), '2024-05-28 14:00:00', 'Card'),
(50.25, 47.75, (SELECT id FROM Customer WHERE user_id = (SELECT id FROM app_user WHERE email = 'customer.two@example.com')), '2024-05-28 14:15:00', 'Cash'),
(25.00, 20.50, (SELECT id FROM Customer WHERE user_id = (SELECT id FROM app_user WHERE email = 'john.doe@example.com')), '2024-05-29 09:00:00', 'Wallet');

-- Insert data into TransactionItem
INSERT INTO TransactionItem (amount, item_id, transaction_id, machine_id) VALUES
(1, (SELECT id FROM Item WHERE name = 'Potato Chips' LIMIT 1), (SELECT id FROM Transaction WHERE initialBalance = 100.50 LIMIT 1), 'SNACK-NYC-001'),
(1, (SELECT id FROM Item WHERE name = 'Chocolate Bar' LIMIT 1), (SELECT id FROM Transaction WHERE initialBalance = 100.50 LIMIT 1), 'SNACK-NYC-001'),
(1, (SELECT id FROM Item WHERE name = 'Bottled Water' LIMIT 1), (SELECT id FROM Transaction WHERE initialBalance = 50.25 LIMIT 1), 'COFFEE-LA-001'),
(1, (SELECT id FROM Item WHERE name = 'Pepperoni Pizza' LIMIT 1), (SELECT id FROM Transaction WHERE initialBalance = 25.00 LIMIT 1), 'PIZZONE-CHI-001');

-- Insert data into Connection
INSERT INTO Connection (customer_id, start, machine_id) VALUES
((SELECT id FROM Customer WHERE user_id = (SELECT id FROM app_user WHERE email = 'customer.one@example.com')), '2024-05-28 13:58:00', 'SNACK-NYC-001'),
((SELECT id FROM Customer WHERE user_id = (SELECT id FROM app_user WHERE email = 'customer.two@example.com')), '2024-05-28 14:13:00', 'COFFEE-LA-001');
